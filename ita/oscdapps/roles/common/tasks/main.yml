---
# This playbook contains (common) plays that will be run on all (FS, DB, other type server) osdcapps nodes.

- name: Install some packages from std repo
  yum: name={{ item }}  state=present
  tags: lamp
  with_items: "{{ yum_pkgs_common }}"
  
- name: Allow LDAP login of groubp astrosdc
  lineinfile: dest=/etc/passwd line="+@astrosdc-core:x:::::"
  
- name: Allow LDAP login of osdcapps
  lineinfile: dest=/etc/passwd line="+{{ user_osdcapps }}:x::::/astro/{{ ansible_hostname }}/{{ homefolder }}/{{ user_osdcapps }}:/bin/tcsh"

- name: Create the mount point /mn/{{ server_acubens }}/{{ mountpoint_u1 }}
  file: path="/mn/{{ server_acubens }}/{{ mountpoint_u1 }}" state=directory mode={{ mount_data_path_mode }}

- name: Mount acubens.uio.no:/mn/{{ server_acubens }}/{{ mountpoint_u1 }} to /mn/{{ server_acubens }}/u1
  mount: name=/{{ faculty_short }}/{{ server_acubens }}/{{ mountpoint_u1 }} src={{ server_acubens }}:{{ acubens_nfs_path }} fstype=nfs state=mounted opts="local_lock=none,lookupcache=none" 
  ignore_errors: true 

- name: Enable and start services
  service: name={{ item }} state=started enabled=yes
  with_items:
   - httpd
   - autofs

- name: Open http service on firewalld
  firewalld: service={{ item }} permanent=true state=enabled 
  with_items:
  -  http

###TODO umask 0022 on alnathdb that causes effective r-xr--r-- for steinhh e.g /etc/opt/rh/rh-mariadb100/my.cnf.d/
- name: Set ACL permissions to steinhh & osdcapps for div paths #1
  acl: name={{ item.path }} entity={{ item.username }} permissions=rwx etype=user state=present recursive=yes 
  with_items:
  - { path: '/etc/httpd/conf', username: "{{ user_steinhh }}" }  
  - { path: '/var/www/html', username: "{{ user_steinhh }}" }
  - { path: '/var/www/html', username: "{{ user_osdcapps }}" }
  - { path: '/etc/php.ini', username: "{{user_steinhh }}" }  
  ignore_errors: yes

- name : Set ACL permissions #2   
  acl: name={{ item.path }} entity={{ item.username }} permissions=rx etype=user state=present recursive=yes default=no
  with_items:
  - { path: '/var/log/httpd', username: "{{ user_steinhh }}" }
  - { path: '/var/log/httpd', username: "{{ user_osdcapps }}" }
  ignore_errors: yes
  
###TODO same as above, but with defaut=yes or check of default=yes can be used above ###

- name: Configure SELinux to allow httpd to use NFS and send mail
  seboolean: name={{ item }} state=true persistent=yes 
  with_items:
  - httpd_use_nfs
  - httpd_can_sendmail
  - rsync_full_access
#  when: sestatus.rc != 0

###TODO Line in file tcp and udp lockd port 4045.

#- name: steinhh can manage Apache
#  lineinfile: dest=/etc/sudoers state=present line="steinhh ALL=NOPASSWD:/usr/bin/systemctl start httpd, /usr/bin/systemctl restart httpd, /usr/bin/systemctl stop httpd, /usr/bin/systemctl reload httpd" validate: '/usr/sbin/visudo -cf %s'

- name: Steinhh can manage Apache
  template: src=templates/httpd_steinhh.xml.j2 dest=/etc/sudoers.d/httpd_steinhh force=no
