---
# This playbook contains common plays for setting up a DB server for osdcapps/Stein Vidar

- name: Install MariaDB 10 from SCL + Apache from std repo
  yum: name={{ item }}  state=present
  tags: mariadb
  with_items: "{{ yum_pkgs_db }}"

###TODO d1 should be 200G on sdc-db

# Create a volume group on top of {{new_disk}} with physical extent size = 32MB. 
#- name: Create new LVM VG 
#  lvg:  vg={{ create_vgname }} pvs={{ new_disk }} pesize=32 state=present

# Create a logical volume of full disk size of {{new_disk}}.
#- name: Create LVM LV
#  lvol: vg={{ create_vgname }} lv={{ create_lvname }} size={{ create_lvsize }}

- name: register a variable for mount point
  set_fact: fsmd={{ item.mount }} fstype={{ item.fstype }}
  with_items: "{{ ansible_mounts }}"
  when: item.mount == mariadb10_datadir

- debug: var=fsmd
- debug: var=fstype

- name: Create a new XFS filesystem on {{ dbdisk }}, avoid LVM usage due to performance reasons 
  filesystem: fstype={{ filesystem }} dev=/dev/{{ dbdisk }} force=no
  when: fsmd != mariadb10_datadir
  ignore_errors: yes

- name: Create home directory for osdcapps 
  file: path=/astro/{{ ansible_hostname }}/{{ homefolder }}/{{ user_osdcapps }} state=directory owner={{ user_osdcapps }} group={{ group_osdcapps }}   mode={{ mount_data_path_mode }} 

# MOUNT d1 to MariaDB's datadir
- name: Mount MariaDB\'s datadir 
  mount: name={{ mariadb10_datadir }} src=/dev/{{ dbdisk }} fstype={{ filesystem }} opts=noatime,nodiratime,nobarrier state=present

- name: Make sure 'mysql' owns  {{ mariadb10_datadir}}
  file: path={{ mariadb10_datadir }} owner=mysql group=mysql mode="u=rwx,g=rx,o=rx" 
  ignore_errors: yes

- name: steinhh can manage MariaDB ++
  blockinfile:
    path: /etc/sudoers 
    state: present 
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->#"
    insertafter: "#includedir /etc/sudoers.d"
#    validate: '/usr/sbin/visudo -cf %s'
    block: |
      steinhh ALL=NOPASSWD:/usr/bin/systemctl start rh-mariadb100-mariadb.service, /usr/bin/systemctl stop rh-mariadb100-mariadb.service, /usr/bin/systemctl restart rh-mariadb100-mariadb.service 

#TODO:  rwx for steinhh + mysql --plugin-dir=/opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin

- name: change ulimit upper limits
  copy: src=templates/limit.js dest=/etc/security/limits.d/20-nproc.conf

- name: Create /etc/systemd/system/rh-mariadb100-mariadb.service.d/
  file: path=/etc/systemd/system/rh-mariadb100-mariadb.service.d state=directory
  ignore_errors: yes

- name : Set MariaDB systemd service ulimit to 10K
  copy: src=templates/mariadb_systemd_limit.j2 dest=/etc/systemd/system/rh-mariadb100-mariadb.service.d/limits.conf  backup=yes  
# notify: systemd daemon_reload   
  ignore_errors: yes

- name: Create custom firewall service definitions from template
  copy: src=templates/{{ item }} dest=/etc/firewalld/services/{{ item | basename | regex_replace('\.j2','') }} backup=yes
  with_items: 
  - osdc-php.xml.j2
  - rsync.xml.j2
  notify:
    - restart firewalld

- meta: flush_handlers
    
- name: Add custom firewall services and enable them	     
  firewalld: service={{ item }} permanent=true state=enabled
  with_items:
  - osdc-php
  - rsync
  notify:
    - restart firewalld

- name: Set ACL permissions to steinhh & osdcapps for div paths \#1
  acl: name={{ item.path }} entity={{ item.username }} permissions=rwx etype=user state=present recursive=yes 
  with_items:
  - { path: '/etc/opt/rh/rh-mariadb100/my.cnf.d', username: 'steinhh' }
  ignore_errors: yes

- name: Create /usr/local/mysql with the owner steinhh
  file: path=/usr/local/mysql/lib state=directory force=yes owner=steinhh group=steinhh

- name: Some symlinking for MariaDB part 1
  file: src=/usr/local/mysql/lib/plugin/{{ item }} dest=/opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin/{{ item }} state=link force=yes
  with_items:
  - ha_bitmap.so
  - ha_scalarray.so
  - udfs.so
- name: Some symlinking for MariaDB part 2
  file: src=/usr/local/mysql/lib/{{ item }} dest=/lib64/{{ item }} state=link force=yes
  with_items:
  - libengine_tools.so 

- name: Enable and start MariaDB service
  systemd: name={{ item }} state=started enabled=yes daemon_reload=yes
  with_items:
   - rh-mariadb100-mariadb.service


