
---
# This playbook contains common plays for setting up a DB server for osdcapps/Stein Vidar

- name: Install MariaDB 10 from SCL + Apache from std repo
  yum: name={{ item }}  state=present
  tags: xfs
  with_items:
  - rh-mariadb100
  - rh-mariadb100-mariadb-devel.x86_64
#install the standard MySQL/MariaDB client libs
  - mariadb                         
#  - httpd
#  - rsync

#- name: Install XFS FS support
#  yum: name=xfsprogs state=present
#  tags: xfs

# Create a volume group on top of {{new_disk}} with physical extent size = 32MB. 
#- name: Create new LVM VG 
#  lvg:  vg={{ create_vgname }} pvs={{ new_disk }} pesize=32 state=present

# Create a logical volume of full disk size of {{new_disk}}.
#- name: Create LVM LV
#  lvol: vg={{ create_vgname }} lv={{ create_lvname }} size={{ create_lvsize }}

#- name: Create a new XFS filesystem on the LV
#  filesystem: fstype={{ filesystem }} dev=/dev/{{ create_vgname }}/{{ create_lvname }} force=yes

- name: Create a directory for mounting the LV MUST HAPPEN AFTER MOUNT
  file: path=/astro/{{ ansible_hostname }}/{{ create_lvname }}/ state=directory mode={{ mount_data_path_mode }} 

# MOUNT d1 to MariaDB's datadir
- name: Mount the LV 
  mount: name={{ mariadb10_datadir}} src=/dev/mapper/{{ create_vgname }}-{{ create_lvname }} fstype={{ filesystem }} opts=noatime,nodiratime,nobarrier state=present

- name: Enable and start MariaDB service + Apache + autofs
  service: name={{ item }} state=started enabled=yes
  with_items:
   - rh-mariadb100-mariadb.service
#   - httpd
#   - autofs

# NOT NEEDED!
#- name: Create INFILE for {{ owner_user }} in MariaDB's datadir
#  file: path={{ mariadb10_datadir }}/INFILE state=directory mode={{ mount_data_path_mode }} owner={{ owner_user }} group={{ owner_group }}

### TODO Stein's div permissions DONE ! ###
#Add the following to /etc/sudoers
#steinhh ALL=NOPASSWD:/usr/bin/systemctl start rh-mariadb100-mariadb.service, /usr/bin/systemctl stop rh-mariadb100-mariadb.service, /usr/bin/systemctl restart rh-mariadb100-mariadb.service
#steinhh ALL=NOPASSWD:/usr/bin/systemctl start httpd, /usr/bin/systemctl restart httpd, /usr/bin/systemctl stop httpd
#steinhh ALL=(mysql) NOPASSWD: /usr/bin/tcsh

#susinths ALL=(mysql) NOPASSWD:  /bin/bash

#chown -R /var/opt/rh.../mysql mysql:mysql
- name: Make sure 'mysql' owns  {{ mariadb10_datadir}}
  file: path={{ mariadb10_datadir }} owner=mysql group=mysql mode="u=rwx,g=rx,o=rx" 
  ignore_errors: yes


- name: Add steinhh to sudoers file
  copy: src=templates/sudoers.j2 dest=/etc/sudoers validate='visudo -cf %s' backup=yes

#TODO:  skriverettigheter til steinhh + mysql --plugin-dir=/opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin

- name: change ulimit upper limits
  copy: src=templates/limit.js dest=/etc/security/limits.d/20-nproc.conf

- name: Create /etc/systemd/system/rh-mariadb100-mariadb.service.d/
  file: path=/etc/systemd/system/rh-mariadb100-mariadb.service.d state=directory
  ignore_errors: yes


#Change ulimit for MariaDB service
- name : Set MariaDB systemd service ulimit to 10K
  copy: src=templates/mariadb_systemd_limit.j2 dest=/etc/systemd/system/rh-mariadb100-mariadb.service.d/limits.conf  backup=yes  
  notify: systemd daemon_reload   
  ignore_errors: yes


###TODO: copy services to dest as .xml!

- name: Create custom firewall service definitions from template
  copy: src=templates/{{ item }} dest=/etc/firewalld/services/{{ item | basename | regex_replace('\.j2','') }} backup=yes
  with_items: 
  - osdc-php.xml.j2
  - rsync.xml.j2
  

#TODO: now firewall-cmd --reload before adding the new defined services!
- name: Reload firewall rules
  shell: /usr/bin/firewall-cmd --reload
  
- name: Add custom firewall services and enable them	     
  firewalld: service={{ item }} permanent=true state=enabled
  with_items:
  - osdc-php
  - rsync

- name: Set ACL permissions to steinhh & osdcapps for div paths #1
  acl: name={{ item.path }} entity={{ item.username }} permissions=rwx etype=user state=present recursive=yes 
  with_items:
  - { path: '/etc/opt/rh/rh-mariadb100/my.cnf.d', username: 'steinhh' }
  ignore_errors: yes


#TODO # mkdir -p  /usr/local/mysql && chown steinhh:  /usr/local/mysql
- name: Create /usr/local/mysql with the owner steinhh
  file: path=/usr/local/mysql/lib state=directory force=yes owner=steinhh group=steinhh


#TODO symlinks part 1 DONE!
- name: Some symlinking for MariaDB part 1
  file: src=/usr/local/mysql/lib/plugin/{{ item }} dest=/opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin/{{ item }} state=link force=yes
  with_items:
  - ha_bitmap.so
  - ha_scalarray.so
  - udfs.so
- name: Some symlinking for MariaDB part 2
  file: src=/usr/local/mysql/lib/{{ item }} dest=/lib64/{{ item }} state=link force=yes
  with_items:
  - libengine_tools.so 





# /lib64/libengine_tools.so -> /usr/local/mysql/lib/libengine_tools.so
#  /opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin/ha_bitmap.so ->    /usr/local/mysql/lib/plugin/ha_bitmap.so
#  /opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin/ha_scalarray.so -> /usr/local/mysql/lib/plugin/ha_scalarray.so
#  /opt/rh/rh-mariadb100/root/usr/lib64/mysql/plugin/udfs.so ->         /usr/local/mysql/lib/plugin/udfs.so




